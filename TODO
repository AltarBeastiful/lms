
[Build]
- Makefile per directory. Use the include flags only where needed?

[Cover]
- Handle preferred cover file names ("front.xxx", "cover.xxx", ...)
- Implement a cache and a grabber from some web service (mandatory for artists?) coverartarchive.org

[Database]
- Optim, use SQL query to get the "genre" orphans
- Use Inotify like system to watch modified/added files?
- handle access rights problems (instead of aborting)
- add a global play counter for tracks. This will help people to spot most popular files
- Use the WServer::post method to notify the end of the database scan? (with results?)
- Make clusters based on different metadata (albumgrouping, genre, mood, etc.). Make it configurable somewhere as it is very difficult to handle them all?
- Use albumartist when available (useful for compilations)

[Metadata]
- WMA covers: add support

[Playlist]
- Make public playlists so that users can see what other people are listening to

[Users]
- Handle login lifetime?
- Use the WServer::post method to kick users already logged in?
- Limit multi login from UI and API interfaces (limit per interface is acceptable)

[UI]
	- Add a download button to get the current playlist in a streamed zip file
	- Save user prefs in local storage (volume, loop, shuffle, current playqueue, etc.)
	- Add keyboard shortcuts
	- Add a hint for the user to get the nature of tag (created from genre ? created from audio features?)
	- Implement a play queue
	- Implement a decent player
	- Tags cloud for artist/release
	- Dedicate a color for each tag type

[REST API]
- Make a dedicated REST API. Maybe use the SubSonic API or Ampache API?

[Logs]
- Capture transcoder log output to get more information on errors?
